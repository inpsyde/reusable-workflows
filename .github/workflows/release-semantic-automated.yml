name: Release
on:
  workflow_call:
    inputs:
      BRANCHES:
        description: The release branches. Provide it in JSON string format as ["main", "next"].
        default: ''
        required: false
        type: string
      NODE_VERSION:
        description: Node version with which the release will be executed.
        default: 18
        required: false
        type: string

jobs:
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      MAIN_FILENAME: ''
      BRANCHES: ${{ inputs.BRANCHES }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Install dependencies
        run: |
          npm i -g @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/npm \
            @semantic-release/exec \
            semantic-release \
            ejs

      - name: Checkout
        uses: actions/checkout@v3

      - name: Remove Husky hooks
        run: rm -f .husky/pre-commit

      - name: Check presence of release.config.js
        run: |
          HAS_CONFIG=false
          if [ -f "release.config.js" ]; then 
            echo "Configuration file release.config.js found" 
            HAS_CONFIG=true
          fi

      - name: Prepare main filename
        if: ${{ env.HAS_CONFIG == false }}
        run: |
          if [ -f style.css ]; then 
            MAIN_FILENAME='style.css'
          elif [ -f index.php ]; then 
            MAIN_FILENAME='index.php'
          fi
          echo "MAIN_FILENAME=$(MAIN_FILENAME)" >> $GITHUB_ENV
          if [ -e style.css ]; then 
            echo "style.css exists"
          elif [ -e index.php ]; then 
            echo "index.php exists"
          fi
          
          if [ -f style.css ]; then 
            echo "style.css exists 2"
          fi
          
          if [ -f index.php ]; then 
            echo "index.php exists 2"
          fi

      - name: Prepare list of files to commit
        if: ${{ env.HAS_CONFIG == false }}
        run: |
          if [ -z "$MAIN_FILENAME" ]; then
            FILES_TO_COMMIT='["CHANGELOG.md", "package-lock.json", "package.json", "yarn.lock", "composer.json"]'
          else
            FILES_TO_COMMIT='["CHANGELOG.md", "package-lock.json", "package.json", "yarn.lock", "composer.json", "'$MAIN_FILENAME'"]'
          fi
          echo "FILES_TO_COMMIT=$(echo $FILES_TO_COMMIT | sed 's/"/\\"/g')" >> $GITHUB_ENV

      - name: Prepare list of branches
        if: ${{ env.HAS_CONFIG == false }}
        run: |
          BRANCHES=${BRANCHES:-'["main", "next", {"name": "beta", "prerelease": true}, {"name": "alpha", "prerelease": true}]'}
          echo "BRANCHES=$(echo $BRANCHES | sed 's/"/\\"/g')" >> $GITHUB_ENV

      - name: Checkout the workflow repository
        if: ${{ env.HAS_CONFIG == false }}
        uses: actions/checkout@v3
        with:
          repository: inpsyde/reusable-workflows
          ref: automatic-release
          path: workflow-repo

      - name: Compile the release.config.js template
        if: ${{ env.HAS_CONFIG == false }}
        run: |
          ejs ${GITHUB_WORKSPACE}/workflow-repo/templates/release-semantic-automated/release.config.ejs -o release.config.js branches="${{ env.BRANCHES }}" mainFilename=${{ env.MAIN_FILENAME }} filesToCommit="${{ env.FILES_TO_COMMIT }}"

      - name: Check the presence of the configuration file
        run: |
          if [ ! -f "release.config.js" ]; then 
            echo "Configuration file release.config.js does not exist, aborting!" 
            exit 1
          fi
          cat release.config.js

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
