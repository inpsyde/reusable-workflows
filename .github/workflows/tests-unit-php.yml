name: PHPUnit tests

on:
  workflow_call:
    inputs:
      PHP_MATRIX:
        description: Matrix of PHP versions as a JSON formatted object.
        default: '["7.4"]'
        required: false
        type: string
      COMPOSER_ARGS:
        description: Set of arguments passed to Composer.
        default: '--prefer-dist'
        required: false
        type: string
      PHPUNIT_ARGS:
        description: Set of arguments passed to PHPUnit.
        default: '--coverage-text'
        required: false
        type: string
    secrets:
      COMPOSER_AUTH_JSON:
        description: Authentication for privately hosted packages and repositories as a JSON formatted object.
        required: false
      ENV_VARS:
        description: Additional environment variables as a JSON formatted object.
        required: false

jobs:
  tests-unit-php:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ${{ fromJson(inputs.PHP_MATRIX) }}
    env:
      COMPOSER_AUTH: '${{ secrets.COMPOSER_AUTH_JSON }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Set up custom environment variables
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
        if: ${{ env.ENV_VARS }}
        uses: actions/github-script@v6
        with:
          script: |
            JSON
              .parse(process.env.ENV_VARS)
              .forEach(envVar => core.exportVariable(envVar.name, envVar.value));

      - name: Set up problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: ${{ inputs.COMPOSER_ARGS }}

      - name: Run PHPUnit
        run: ./vendor/bin/phpunit ${{ inputs.PHPUNIT_ARGS }}
