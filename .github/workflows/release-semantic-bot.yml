name: Release
on:
  workflow_call:
    inputs:
      BRANCHES:
        description: The release branches. Provide it in JSON format.
        default: '["main", "next", {"name": "beta", "prerelease": true}, {"name": "alpha", "prerelease": true} ]'
        required: false
        type: string
      PACKAGE_TYPE:
        description: Choices are "wordpress-plugin", "wordpress-theme", "library", "custom". Needed to understand what release procedure to run or to run a completely custom procedure that lives inside the repository
        required: true
        type: string
      MAIN_FILENAME:
        description: Main file name where the WordPress header is present
        required: true
        type: string
      FILES:
        description: File names where the version number needs to be updated. Provide it in JSON format.
        required: true
        type: string

jobs:
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          npm i -g @semantic-release/changelog \
            @semantic-release/commit-analyzer \
            @semantic-release/exec \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/npm \
            @semantic-release/release-notes-generator \
            semantic-release
      - name: Checkout
        uses: actions/checkout@v3
      - name: Remove Husky hooks
        run: rm -f .husky/pre-commit
      - name: Create semantic release bot configuration file
        if: ${{ inputs.PACKAGE_TYPE }} != "custom"
        env:
          PACKAGE_FILES: ${{ inputs.FILES }}
          BRANCHES: ${{ inputs.BRANCHES }}
        run: |
          echo "module.exports = {
            \"branches\": $BRANCHES,
            \"plugins\": [
              \"@semantic-release/commit-analyzer\",
              \"@semantic-release/release-notes-generator\",
              \"@semantic-release/changelog\",
              [\"@semantic-release/npm\", {
                \"tarballDir\": \"release\",
                \"npmPublish\": false
              }],
              [\"@semantic-release/exec\", {
                \"prepareCmd\": \"bash release.sh \${nextRelease.version}\",
              }],
              \"@semantic-release/github\",
              [\"@semantic-release/git\", {
                \"assets\": $PACKAGE_FILES,
                \"message\": \"chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}\"
              }]
            ],
            \"preset\": \"angular\",
            \"tagFormat\": \"\${version}\"
          }" > release.config.js
      - name: Configure semantic release bot for a wordpress plugin
        if: ${{ inputs.PACKAGE_TYPE == "wordpress-plugin" }}
        env:
          MAIN_FILENAME: ${{ inputs.MAIN_FILENAME }}
        run: echo "export PATH=\"./node_modules/.bin:\$PATH\"
              VER=\$1
              TO=\"Version:\"
              TO_VER=\"\$TO     \$VER\"
              sed -i \"s/Version:\(.*\)/\$TO_VER/\" \"$MAIN_FILENAME\"" > release.sh
      - name: Configure semantic release bot for a wordpress theme
        if: ${{ inputs.PACKAGE_TYPE == "wordpress-theme" }}
        run: echo 'export PATH="./node_modules/.bin:$PATH"
              VER=$1
              TO="Version:"
              TO_VER="$TO $VER"
              sed -i "s/Version:\(.*\)/$TO_VER/" "style.css"' > release.sh
      - name: Configure semantic release bot for a library
        if: ${{ inputs.PACKAGE_TYPE == "library" }}
        run: echo "" > release.sh
      - name: Configure semantic release bot for a custom package
        if: ${{ inputs.PACKAGE_TYPE == "custom" }}
        run: echo "Using repository release configurations"
      - name: DEBUG
        run: |
          cat release.sh

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
